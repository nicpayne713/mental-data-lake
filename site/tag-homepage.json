{
  "version": "https://jsonfeed.org/version/1",
  "title": "Pype.dev",
  "home_page_url": "https://pype.dev",
  "feed_url": "https://pype.dev/tag-homepage.json",
  "description": "my mental data-lake",
  "items": [
    {
      "id": "https://pype.dev/skimpy.html",
      "url": "https://pype.dev/skimpy.html",
      "title": "Skimpy",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<h2><a href=\"#eda\" aria-hidden=\"true\" class=\"anchor\" id=\"eda\"></a>EDA</h2>\n<p>I work with data a lot, but the nature of my job isn't to dive super deep into a small amount of datasets,\nI'm often jumping between several projects every day and need to just get a super quick glance at some tables to get a high level view.</p>\n<p>When I'm doing more interactive exploration I've graduated from Jupyter cells with <code>df_N.head()</code> to using an amazing tool called <a href=\"https://www.visidata.org/\">visidata</a></p>\n<p>However, Visidata is a terminal based application and I'm often in an iPython console... so is there a way to move even faster for my super quick summary views?</p>\n<p><u>yes!</u></p>\n<h2><a href=\"#skimpy\" aria-hidden=\"true\" class=\"anchor\" id=\"skimpy\"></a>Skimpy</h2>\n<p>First thing to do is <code>pip install skimpy</code> and then it's as easy to get some summary stats with <code>skimpy &lt;data&gt;</code></p>\n<p><figure><img src=\"/media/skimpy-zsh.png\" alt=\"Alt Text\" title=\"skimpy-zsh\" /><figcaption>skimpy-zsh</figcaption></figure></p>\n<p>This is super nice for seeing missing values in particular as well as the distribution shape of the data.</p>\n<h2><a href=\"#ipython\" aria-hidden=\"true\" class=\"anchor\" id=\"ipython\"></a>iPython</h2>\n<p>But wait... I just said I'm normally in an iPython session but that was called from zsh.. If I'm hoping back into zsh I might as well use visidata to have more powerful exploration at my fingertips.\nSo... can I see this table quickly without breaking my iPython workflow?</p>\n<p><u>Of course you can with magic!</u></p>\n<p><figure><img src=\"/media/skimpy-ipython.png\" alt=\"Alt Text\" title=\"skimpy-ipython\" /><figcaption>skimpy-ipython</figcaption></figure></p>\n<p>The above assumes you're looking at a file, like you would in the terminal.\n<code>skimpy</code> works even better in iPython with <code>from skimpy import skim</code> then pass any DataFrame to <code>skim</code>!</p>\n<p><figure><img src=\"/media/skimpy-ipython2.png\" alt=\"Alt Text\" title=\"skimpy-ipython2\" /><figcaption>skimpy-ipython2</figcaption></figure></p>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2022-03-23T00:00:00-00:00",
      "image": "/media/skimpy-zsh.png",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "python",
        "homepage",
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/wireguard.html",
      "url": "https://pype.dev/wireguard.html",
      "title": "Wireguard",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<h2><a href=\"#vpn\" aria-hidden=\"true\" class=\"anchor\" id=\"vpn\"></a>VPN</h2>\n<p>Virtual Private Networks are a big deal, and this shouldn't be considered anything even close to a guide on using them.\nHere are just my notes and some setup for how I use <a href=\"https://www.wireguard.com/\">wireguard</a> at home.</p>\n<h2><a href=\"#wireguard\" aria-hidden=\"true\" class=\"anchor\" id=\"wireguard\"></a>Wireguard</h2>\n<p>Wireguard is an awesome peer-to-peer VPN tunnel that makes it really easy for me to get into my home network when I'm out and about.\nMy main reasons for this are 1. I don't trust public wi-fi and 2. I want to use pi-hole for ad blocking when I'm not at home</p>\n<p>Wireguard can be configured as a &quot;peer-to-site&quot; VPN tunnel as well.\nMy vpn setup let's me jump to various machines on my network from anywhere!</p>\n<p>I use <a href=\"https://pivpn.io/\">pivpn</a> in a VM that's already running <code>pi-hole</code> to host my wireguard server.\nIt's super easy to setup just by following the instructions on the pivpn site.</p>\n<p>The reason I like it is that I have a nice <code>cli</code> for managing wireguard configs.</p>\n<pre><code class=\"language-bash\">dumbledore@pihole-vpn:~$ pivpn\n::: Control all PiVPN specific functions!\n:::\n::: Usage: pivpn &lt;command&gt; [option]\n:::\n::: Commands:\n:::    -a, add              Create a client conf profile\n:::    -c, clients          List any connected clients to the server\n:::    -d, debug            Start a debugging session if having trouble\n:::    -l, list             List all clients\n:::   -qr, qrcode           Show the qrcode of a client for use with the mobile app\n:::    -r, remove           Remove a client\n:::  -off, off              Disable a user\n:::   -on, on               Enable a user\n:::    -h, help             Show this help dialog\n:::    -u, uninstall        Uninstall pivpn from your system!\n:::   -up, update           Updates PiVPN Scripts\n:::   -bk, backup           Backup VPN configs and user profiles\n</code></pre>\n<p>When I'm ready to add a new client to my <code>wg</code> network, it's as easy as <code>pivpn add</code> and follow the instructions.\nThe easiest part here is that you'll be given a QR code in the terminal that you can just scan with the client (like a smart phone) and you'll have your wireguard config handled by the app (oh right, download the wireguard app) in no time!</p>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2022-03-12T00:00:00-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "homelab",
        "homepage",
        "tech"
      ],
      "language": "en"
    }
  ]
}