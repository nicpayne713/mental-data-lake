{
  "version": "https://jsonfeed.org/version/1",
  "title": "Pype.dev",
  "home_page_url": "https://pype.dev",
  "feed_url": "https://pype.dev/tag-tech.json",
  "description": "my mental data-lake",
  "items": [
    {
      "id": "https://pype.dev/stylus-for-custom-webpage-themes.html",
      "url": "https://pype.dev/stylus-for-custom-webpage-themes.html",
      "title": "Stylus for custom webpage themes",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<p>the Logos web app is DISGUSTINGY bright/white - enough to actually ruin your morning...</p>\n<p>Thankfully there's an extension called <a href=\"https://addons.mozilla.org/en-US/firefox/addon/styl-us/\">stylus</a> and some kind folks in the Logos community created a nice dark theme <a href=\"https://userstyles.world/style/18547/logos-web-app-dark-mode\">here</a>. You simply install the extension, then go to the userstyles link &lt;-- and click <code>install</code>. It only changes themes for the sites configured - in this case <a href=\"app-logos-com.html\">app.logos.com</a></p>\n<h1><a href=\"#todo-image\" aria-hidden=\"true\" class=\"anchor\" id=\"todo-image\"></a>TODO: image</h1>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2024-11-27T06:07:39-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/dns-broke-after-reboot-ubuntu-22-04.html",
      "url": "https://pype.dev/dns-broke-after-reboot-ubuntu-22-04.html",
      "title": "DNS Broke After Reboot - Ubuntu 22.04",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<p>I rebooted by server and DNS broke randomly. I have no idea if it was from a kernel update or what but that's the issue with Ubuntu I guess...</p>\n<p>After much toil and none of the other options working for me (sorry to not have those documented here) this is what got me the vic from this <a href=\"https://askubuntu.com/questions/1406827/how-to-set-dns-on-ubuntu-22-04-when-you-have-no-netplan-config\">SO Post</a></p>\n<p>sudo mkdir /etc/systemd/resolved.conf.d/\nsudo $EDITOR /etc/systemd/resolved.conf.d/dns_servers.conf</p>\n<p>Most folks probably are good with google (8.8.8.8) and cloudflare (1.1.1.1)</p>\n<pre><code>[Resolve]\nDNS=8.8.8.8 1.1.1.1\n</code></pre>\n<p>But I decided to use tailscale</p>\n<pre><code>[Resolve]\nDNS=100.100.100.100\n</code></pre>\n<p>Then restart systemd-resolved</p>\n<p>sudo systemctl restart systemd-resolved</p>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2024-11-22T08:08:40-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "homelab",
        "linux",
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/restart-kde-plasma.html",
      "url": "https://pype.dev/restart-kde-plasma.html",
      "title": "Restart KDE Plasma",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<p>Plasma shits the bed a little too often on Fedora for me right now but I finally have a quick fix...</p>\n<pre><code>\nsudo killall plasmashell\n\nkstart plasmashell\n\n</code></pre>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2024-11-08T15:53:52-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "linux",
        "terminal",
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/opnsense-bootstrap-recovery.html",
      "url": "https://pype.dev/opnsense-bootstrap-recovery.html",
      "title": "OPNSense Bootstrap Recovery",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<p>enabling DHCP WAN port (<code>dhclient &lt;iface&gt;</code>)- running the bootstrap script - <code>sh /usr/local/sbin/opnsense-bootstrap</code></p>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2024-11-07T08:40:19-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "infrastructure",
        "homelab",
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/docker-remote-add.html",
      "url": "https://pype.dev/docker-remote-add.html",
      "title": "docker-remote-add",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<p>Add from url??</p>\n<p>ADD <a href=\"http://example.com/cars.csv\">http://example.com/cars.csv</a> /tmp/cars.csv</p>\n<p>Unpack automatically!? (.tar, .tar.gz, .tgz, .bz2, .tbz2, .txz, .zip)</p>\n<p>ADD myapp.tar.gz /opt/myapp/</p>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2024-09-17T06:19:00-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "homelab",
        "linux",
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/docker-copy-and-chown.html",
      "url": "https://pype.dev/docker-copy-and-chown.html",
      "title": "Docker copy and chown",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<p>COPY --chown=myuser:mygroup source-file target-file</p>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2024-09-17T06:18:09-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "linux",
        "homelab",
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/switching-from-altacv-to-rendercv-for-my-resume.html",
      "url": "https://pype.dev/switching-from-altacv-to-rendercv-for-my-resume.html",
      "title": "Switching from AltaCV to RenderCV for my Resume",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<p>I was using a fun LaTex-based project for managing my resume called <a href=\"https://github.com/liantze/AltaCV\">AltaCV</a>. I loved the customization and was familiar with Tek from school. However, I update my resume so infrequently that anytime I'd hop back to it I'd have to remember how to work with Tex and that was frustrating as I've lost touch with it over the years.</p>\n<p>Scrolling GitHub treding repos I saw <a href=\"https://github.com/sinaatalay/rendercv\">RenderCV</a> which let's me just use YAML to write my resume and then it compiles to Tek through Python. There's a sister project to make your own using this very easly call <a href=\"https://github.com/sinaatalay/rendercv-pipeline\">rendercv-pipeline</a>. I forked that repo and translated my tek resume to the YAML. The included theme is nice enough is YAML is much easier to maintain long-term.</p>\n<p>My resume is behind a private GH repo but the example from rendercv-pipeline is <a href=\"https://github.com/sinaatalay/rendercv-pipeline/blob/main/John_Doe_CV.pdf\">here on GitHub</a></p>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2024-08-01T05:59:46-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "python",
        "python",
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/interesting-ips-between-jellyfin-clients-and-server-depending-on-tailscale-and-server-address.html",
      "url": "https://pype.dev/interesting-ips-between-jellyfin-clients-and-server-depending-on-tailscale-and-server-address.html",
      "title": "Interesting IPs between Jellyfin clients and server depending on tailscale and server address",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<p>When connecting from my phone to jellyfin I'm seeing some interesting patterns.</p>\n<h2><a href=\"#scenarios\" aria-hidden=\"true\" class=\"anchor\" id=\"scenarios\"></a>Scenarios</h2>\n<h3><a href=\"#tailscale-ip-of-phone-is-listed-as-local-network-to-jellyfin\" aria-hidden=\"true\" class=\"anchor\" id=\"tailscale-ip-of-phone-is-listed-as-local-network-to-jellyfin\"></a>Tailscale IP of phone is listed as local network to jellyfin</h3>\n<p>Wifi: off\nTailscale: on\nUse exit node: on\nLAN access: on\nJellyfin: LAN IP</p>\n<p>Jellyfin sees 192.168.1.1, my router address</p>\n<hr />\n<p>Wifi: off\ntailscale: on\nUse exit node: on\nLAN access: on\nJellyfin: Tailscale magic DNS</p>\n<p>Jellyfin sees the docker bridge network</p>\n<p>Q: This might be because of traefik somehow</p>\n<hr />\n<p>Wifi: off\ntailsacale: on\nUse exit node: on\nLAN access: off\nJellyfin: LAN IP</p>\n<p>Jellyfin sees the 192.168.1.1</p>\n<p>Q: Why did this work even work?</p>\n<hr />\n<p>Wifi: off\ntailsacale: on\nUse exit node: on\nLAN access: off\nJellyfin: Tailscale magic DNS</p>\n<p>Jellyfin sees the docker bridge network</p>\n<hr />\n<p>Wifi: off\ntailsacale: on\nUse exit node: off\nLAN access: off\nJellyfin: LAN IP</p>\n<p>Jellyfin sees the 192.168.1.1</p>\n<p>Q: Why did this work?</p>\n<hr />\n<p>Wifi: off\ntailsacale: on\nUse exit node: off\nLAN access: off\nJellyfin: Tailscale magic DNS</p>\n<p>Jellyfin sees the docker bridge network</p>\n<hr />\n<p>Wifi: on\ntailsacale: of\nUse exit node: off\nLAN access: off\nJellyfin: LAN IP (via pihole DNS)</p>\n<p>Jellyfin sees the IP of my phone</p>\n<hr />\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2024-07-12T06:24:57-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "homelab",
        "linux",
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/upgrading-your-kernel-can-f-you-up-whoops.html",
      "url": "https://pype.dev/upgrading-your-kernel-can-f-you-up-whoops.html",
      "title": "Upgrading your kernel can F you up... whoops",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<p><a href=\"https://forum.proxmox.com/threads/update-error-with-coral-tpu-drivers.136888/#post-608975\">https://forum.proxmox.com/threads/update-error-with-coral-tpu-drivers.136888/#post-608975</a> I lost TPU for frigate, this saved me ass</p>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2024-06-26T10:21:59-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "homelab",
        "linux",
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/fonts-in-vs-c-e.html",
      "url": "https://pype.dev/fonts-in-vs-c-e.html",
      "title": "Fonts in VS C**e",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<p>Jet Brains has to be specified 'JetBrainsMono Nerd Font Mono'</p>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2024-05-20T06:44:07-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "linux",
        "terminal",
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/customize-k9s.html",
      "url": "https://pype.dev/customize-k9s.html",
      "title": "Customize K9s",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<p>To customize k9s use the skins from catppuccin or the ones k9s supplies</p>\n<pre><code class=\"language-bash\">OUT=&quot;${XDG_CONFIG_HOME:-$HOME/.config}/k9s/skins&quot;\nmkdir -p &quot;$OUT&quot;\ncurl -L https://github.com/catppuccin/k9s/archive/main.tar.gz | tar xz -C &quot;$OUT&quot; --strip-components=2 k9s-main/dist\n</code></pre>\n<p>Then edit your k9s config</p>\n<pre><code># ~/.config/k9s/config.yml\nk9s:\n  ui:\n    skin: catppuccin-mocha\n    # ...or another flavor:\n    # skin: catppuccin-macchiato\n    # skin: catppuccin-frappe\n    # skin: catppuccin-latte\n\n    # ...or the transparent variants:\n    # skin: catppuccin-mocha-transparent\n    # skin: catppuccin-macchiato-transparent\n    # skin: catppuccin-frappe-transparent\n    # skin: catppuccin-latte-transparent\n</code></pre>\n<p>Other k9s skins are available <a href=\"https://github.com/derailed/k9s/tree/master/skins\">here</a></p>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2024-05-06T11:57:07-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "cli",
        "homelab",
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/kanboard-to-keep-me-focused-on-my-own-ideas.html",
      "url": "https://pype.dev/kanboard-to-keep-me-focused-on-my-own-ideas.html",
      "title": "Kanboard to keep me focused on my own ideas",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<h2><a href=\"#tldr\" aria-hidden=\"true\" class=\"anchor\" id=\"tldr\"></a>TL;DR</h2>\n<p>I've been using kanboard as a self-hosted kanban board. It's keeping me focused on <a href=\"https://myditialharbor.com\">Digital Harbor</a> when I'd rather be doing something less productive.</p>\n<h2><a href=\"#my-todos\" aria-hidden=\"true\" class=\"anchor\" id=\"my-todos\"></a>My TODOs</h2>\n<p>Here's the thing about my TODOs... they're everywhere. I've tried a crazy amount of different organizational tactics for my todo items. I've tried post-it notes, a journal, <code>TODO.md</code> in specific repos, a master <code>todo</code> repo, todo CLIs, etc...</p>\n<p>The problem for me was consistency... I would regularly forget what I was using for TODOs at that moment in my life... was there a todo file in this project? Do I have a todo repo cloned on this computer? Is this stuff in my journal or on post-it notes?</p>\n<p>And what do I do with new ideas? Do I organize them centrally or use a repo for the idea I have?</p>\n<p>It was getting out of hand to a debilitating degree... For a while I just gave up on being organized at all... Things would get done as necessary and if I got some motivation to work on something it was immediately smothered with the anxiety of how I was going to organize my work...</p>\n<p>At some point it became too much... Now, I have some experience with Azure DevOps/Jira for project management and then I came across Kanboard...</p>\n<h2><a href=\"#kanboard\" aria-hidden=\"true\" class=\"anchor\" id=\"kanboard\"></a>Kanboard</h2>\n<p><a href=\"https://kanboard.org/\">Kanboard</a></p>\n<p>Kanboard is just a self-hosted kanban style todo app. I know there's a ton of these so the TL;DR of my lesson is I picked an app that I would just use based on simplicity of managing and hosting.</p>\n<p>I have had kanboard running in my homelab for a long time, but I only barely use it intermittenly. And at that rate I didn't spend any real time organizing my tickets, so I wasn't akshuallly using it - it was just a post-it note replacement.</p>\n<p>But then I had an idea for a genuine business idea, and if I was going to ever have a hope of making it a reality, I needed to stay organized. This was when I decided to give kanboard a little more effort... I knew I could always remember that I'd chosen an app as my TODO solution (given all the time I spent questioning what I was using at any given point in time). I also knew I could host kanboard so that I could get to it from wherever was necessary because my homelab is relatively easy to add another public service to.</p>\n<p>So once I just decided to lean into this thing, I would take advantage of any moments of motivation and just jot down ideas for things that had to get done... Simple stuff like explore an infra management option, add one feature to a config, or migrate one website to another stack... And I would just write these things downs until I have enough time free to crack down on a task. The beautiful thing is, when I am struck with just enough time to do something, and the motivation to do something, I don't waste any time deciding what to do - past-me did present-me a favor and decided what was important already... So as long as I do myself the favor, when I'm ready to go I am never beaten by the anxiety of not knowing what I ant to do or how I'll track what I'm doing... I chose kanboard and even though it's not as fast as a terminal TUI,  it is reliable, simple, and keeps me focused on what I need to do.</p>\n<h2><a href=\"#the-biggest-benefit\" aria-hidden=\"true\" class=\"anchor\" id=\"the-biggest-benefit\"></a>The biggest benefit</h2>\n<p>Not only is just having one app as the solution nice because it's centrally managed and accessible from wherever I need to get it, but the TOP feature of kanboard I use is comments on tickets... I get to continue to do future-me favors, my jotting down where I'm at in a task, what's left to do, what I'm trying, etc... and future-me is in a great mood, because when I have that free few minutes, I can just read my own past thoughts and get back up to speed without wasting time trying to remember things I never would've remembered if I hadn't written them down!</p>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2024-04-20T18:27:07-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "homelab",
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/git-fetch-failing-check-your-config.html",
      "url": "https://pype.dev/git-fetch-failing-check-your-config.html",
      "title": "Git fetch failing - check your config",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<p>I started deploying a website to Cloudflare on a branch called <code>pages</code>. Similar to one of the GH Pages deployment patterns. But when my CI was pushing the branch I couldn't see it locally...</p>\n<p><code>git fetch -a</code> wasn't pulling any new branches, and <code>git branch -a</code> was only showing my development and main branches at the remote... so what gives?</p>\n<p>I checked my git config, and to this moment I have no idea how this happened but check out my fetch config:</p>\n<pre><code>git config --get remote.origin.fetch\n+refs/tags/*:refs/tags/*\n</code></pre>\n<p>So to fix this:</p>\n<pre><code>git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'\n</code></pre>\n<p>Now <code>git fetch -a</code> works again</p>\n<pre><code>&gt; git fetch -a\n\nFrom github.com:DigitalHarbor7/DigitalHarbor\n   357a28a..969b027  develop    -&gt; origin/develop\n   c052ac9..6d40210  main       -&gt; origin/main\n * [new branch]      pages      -&gt; origin/pages\n</code></pre>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2024-04-18T08:32:33-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "cli",
        "data",
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/git-repo-specific-ssh-key.html",
      "url": "https://pype.dev/git-repo-specific-ssh-key.html",
      "title": "Git repo specific SSH Key!",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<p>git config --add --local core.sshCommand 'ssh -i &lt;&lt;&lt;PATH_TO_SSH_KEY&gt;&gt;&gt;'</p>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2024-01-04T15:42:15-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "cli",
        "homelab",
        "tech"
      ],
      "language": "en"
    },
    {
      "id": "https://pype.dev/dhcp-restart-to-save-ubuntu-22-04-server-networking.html",
      "url": "https://pype.dev/dhcp-restart-to-save-ubuntu-22-04-server-networking.html",
      "title": "DHCP Restart to Save Ubuntu 22.04 Server Networking",
      "content_html": "<!-- Content Injected to every content markdown header -->\n<p>I moved a computer to a remote location for an off-site backup but when it was powered on it wouldn't show up on any networks. A solution that got me back in was a friend restarting the dhcp client for me:</p>\n<pre><code class=\"language-bash\">sudo dhclient -r -v &lt;interface&gt; &amp;&amp; sudo dhclient -v &lt;interface&gt;\n</code></pre>\n<!-- Content Injected to every content markdown footer -->\n",
      "summary": "",
      "date_published": "2023-12-31T20:26:50-00:00",
      "image": "",
      "authors": [
        {
          "name": "Nicholas Payne",
          "url": "https://github.com/pypeaday",
          "avatar": "https://github.com/pypeaday.png"
        }
      ],
      "tags": [
        "homelab",
        "linux",
        "tech"
      ],
      "language": "en"
    }
  ]
}