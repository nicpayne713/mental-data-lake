<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Pype.dev</title><link>https://pype.dev</link><description>my mental data-lake</description><pubDate>Fri, 22 Nov 2024 08:08:40 GMT</pubDate><lastBuildDate>Wed, 04 Dec 2024 18:54:43 GMT</lastBuildDate><generator>marmite</generator><item><title>DNS Broke After Reboot - Ubuntu 22.04</title><link>https://pype.dev/dns-broke-after-reboot-ubuntu-22-04.html</link><author>nicpayne</author><category>homelab</category><category>linux</category><category>tech</category><guid>https://pype.dev/dns-broke-after-reboot-ubuntu-22-04.html</guid><pubDate>Fri, 22 Nov 2024 08:08:40 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p>I rebooted by server and DNS broke randomly. I have no idea if it was from a kernel update or what but that's the issue with Ubuntu I guess...</p>
<p>After much toil and none of the other options working for me (sorry to not have those documented here) this is what got me the vic from this <a href="https://askubuntu.com/questions/1406827/how-to-set-dns-on-ubuntu-22-04-when-you-have-no-netplan-config">SO Post</a></p>
<p>sudo mkdir /etc/systemd/resolved.conf.d/
sudo $EDITOR /etc/systemd/resolved.conf.d/dns_servers.conf</p>
<p>Most folks probably are good with google (8.8.8.8) and cloudflare (1.1.1.1)</p>
<pre><code>[Resolve]
DNS=8.8.8.8 1.1.1.1
</code></pre>
<p>But I decided to use tailscale</p>
<pre><code>[Resolve]
DNS=100.100.100.100
</code></pre>
<p>Then restart systemd-resolved</p>
<p>sudo systemctl restart systemd-resolved</p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>OPNSense Bootstrap Recovery</title><link>https://pype.dev/opnsense-bootstrap-recovery.html</link><author>nicpayne</author><category>infrastructure</category><category>homelab</category><category>tech</category><guid>https://pype.dev/opnsense-bootstrap-recovery.html</guid><pubDate>Thu, 07 Nov 2024 08:40:19 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p>enabling DHCP WAN port (<code>dhclient &lt;iface&gt;</code>)- running the bootstrap script - <code>sh /usr/local/sbin/opnsense-bootstrap</code></p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Recovering OPNSense</title><link>https://pype.dev/recovering-opnsense.html</link><author>nicpayne</author><category>blog</category><category>homelab</category><guid>https://pype.dev/recovering-opnsense.html</guid><pubDate>Wed, 06 Nov 2024 00:00:00 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p>I woke up to faulty internet and after some troubleshooting it turns out the
root zfs dataset that OPNSense boots from got corrupted...</p>
<blockquote>
<p>PRO-TIP - Auto backup your OPNSense config to Google Drive, git, or
nextcloud... But if you won't then at least back up your OPNSense config
somewhere everytime you update it.</p>
</blockquote>
<p>It's too much to recount every issue, so here's a bullet list what worked.</p>
<ol>
<li>On a fresh drive install OPNSense</li>
<li>Plug in the old drive through a USB enclosure - now I'm not sure what would
happen if you plugged it in along with the new drive and then booted up.
Because both drives will have a zfs pool <code>zroot</code> and the boot dataset is
automounted at <code>/zroot/ROOT/default</code>. My old <code>zroot</code> pool was <code>SUSPENDED</code> so it
didn't automount</li>
<li>Because the old <code>zoot/ROOT/default</code> was corrupted I did this to mount it RO:
<code>zpool import -d &lt;path to zfs partition - /dev/stuff&gt; -N zroot zrootrecovery</code></li>
</ol>
<blockquote>
<p>-d is the zfs flag to import the pool by disk id, -N it to not mount any of
the datasets (we need to change mountpoints) and the <code>zroot zrootrecovery</code>
imports the <code>zroot</code> pool with a new name</p>
</blockquote>
<ol start="4">
<li>Change the mountpoints for all the <code>zrootrecovery</code> datasets to somewhere
like <code>/mnt/zrootrecovery</code></li>
<li>Depending on the mount point you set you'll find a <code>config</code> directory around
<code>/mnt/zrootrecovery/ROOT/default/config</code> - copy the file you want to another
machine via scp or whatever</li>
<li>Go to OPNSense webui and recover from that config!</li>
</ol>
<p>All in all this process took me around 8 hours but I did run into about ever
issue under the sun (several bad disks in the mix, a laptop that wouldn't live
boot into a BSD system, etc.)</p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>docker-remote-add</title><link>https://pype.dev/docker-remote-add.html</link><author>nicpayne</author><category>homelab</category><category>linux</category><category>tech</category><guid>https://pype.dev/docker-remote-add.html</guid><pubDate>Tue, 17 Sep 2024 06:19:00 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p>Add from url??</p>
<p>ADD <a href="http://example.com/cars.csv">http://example.com/cars.csv</a> /tmp/cars.csv</p>
<p>Unpack automatically!? (.tar, .tar.gz, .tgz, .bz2, .tbz2, .txz, .zip)</p>
<p>ADD myapp.tar.gz /opt/myapp/</p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Docker copy and chown</title><link>https://pype.dev/docker-copy-and-chown.html</link><author>nicpayne</author><category>linux</category><category>homelab</category><category>tech</category><guid>https://pype.dev/docker-copy-and-chown.html</guid><pubDate>Tue, 17 Sep 2024 06:18:09 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p>COPY --chown=myuser:mygroup source-file target-file</p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Interesting IPs between Jellyfin clients and server depending on tailscale and server address</title><link>https://pype.dev/interesting-ips-between-jellyfin-clients-and-server-depending-on-tailscale-and-server-address.html</link><author>nicpayne</author><category>homelab</category><category>linux</category><category>tech</category><guid>https://pype.dev/interesting-ips-between-jellyfin-clients-and-server-depending-on-tailscale-and-server-address.html</guid><pubDate>Fri, 12 Jul 2024 06:24:57 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p>When connecting from my phone to jellyfin I'm seeing some interesting patterns.</p>
<h2><a href="#scenarios" aria-hidden="true" class="anchor" id="scenarios"></a>Scenarios</h2>
<h3><a href="#tailscale-ip-of-phone-is-listed-as-local-network-to-jellyfin" aria-hidden="true" class="anchor" id="tailscale-ip-of-phone-is-listed-as-local-network-to-jellyfin"></a>Tailscale IP of phone is listed as local network to jellyfin</h3>
<p>Wifi: off
Tailscale: on
Use exit node: on
LAN access: on
Jellyfin: LAN IP</p>
<p>Jellyfin sees 192.168.1.1, my router address</p>
<hr />
<p>Wifi: off
tailscale: on
Use exit node: on
LAN access: on
Jellyfin: Tailscale magic DNS</p>
<p>Jellyfin sees the docker bridge network</p>
<p>Q: This might be because of traefik somehow</p>
<hr />
<p>Wifi: off
tailsacale: on
Use exit node: on
LAN access: off
Jellyfin: LAN IP</p>
<p>Jellyfin sees the 192.168.1.1</p>
<p>Q: Why did this work even work?</p>
<hr />
<p>Wifi: off
tailsacale: on
Use exit node: on
LAN access: off
Jellyfin: Tailscale magic DNS</p>
<p>Jellyfin sees the docker bridge network</p>
<hr />
<p>Wifi: off
tailsacale: on
Use exit node: off
LAN access: off
Jellyfin: LAN IP</p>
<p>Jellyfin sees the 192.168.1.1</p>
<p>Q: Why did this work?</p>
<hr />
<p>Wifi: off
tailsacale: on
Use exit node: off
LAN access: off
Jellyfin: Tailscale magic DNS</p>
<p>Jellyfin sees the docker bridge network</p>
<hr />
<p>Wifi: on
tailsacale: of
Use exit node: off
LAN access: off
Jellyfin: LAN IP (via pihole DNS)</p>
<p>Jellyfin sees the IP of my phone</p>
<hr />
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Upgrading your kernel can F you up... whoops</title><link>https://pype.dev/upgrading-your-kernel-can-f-you-up-whoops.html</link><author>nicpayne</author><category>homelab</category><category>linux</category><category>tech</category><guid>https://pype.dev/upgrading-your-kernel-can-f-you-up-whoops.html</guid><pubDate>Wed, 26 Jun 2024 10:21:59 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p><a href="https://forum.proxmox.com/threads/update-error-with-coral-tpu-drivers.136888/#post-608975">https://forum.proxmox.com/threads/update-error-with-coral-tpu-drivers.136888/#post-608975</a> I lost TPU for frigate, this saved me ass</p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Customize K9s</title><link>https://pype.dev/customize-k9s.html</link><author>nicpayne</author><category>cli</category><category>homelab</category><category>tech</category><guid>https://pype.dev/customize-k9s.html</guid><pubDate>Mon, 06 May 2024 11:57:07 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p>To customize k9s use the skins from catppuccin or the ones k9s supplies</p>
<pre><code class="language-bash">OUT=&quot;${XDG_CONFIG_HOME:-$HOME/.config}/k9s/skins&quot;
mkdir -p &quot;$OUT&quot;
curl -L https://github.com/catppuccin/k9s/archive/main.tar.gz | tar xz -C &quot;$OUT&quot; --strip-components=2 k9s-main/dist
</code></pre>
<p>Then edit your k9s config</p>
<pre><code># ~/.config/k9s/config.yml
k9s:
  ui:
    skin: catppuccin-mocha
    # ...or another flavor:
    # skin: catppuccin-macchiato
    # skin: catppuccin-frappe
    # skin: catppuccin-latte

    # ...or the transparent variants:
    # skin: catppuccin-mocha-transparent
    # skin: catppuccin-macchiato-transparent
    # skin: catppuccin-frappe-transparent
    # skin: catppuccin-latte-transparent
</code></pre>
<p>Other k9s skins are available <a href="https://github.com/derailed/k9s/tree/master/skins">here</a></p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Kanboard to keep me focused on my own ideas</title><link>https://pype.dev/kanboard-to-keep-me-focused-on-my-own-ideas.html</link><author>nicpayne</author><category>homelab</category><category>tech</category><guid>https://pype.dev/kanboard-to-keep-me-focused-on-my-own-ideas.html</guid><pubDate>Sat, 20 Apr 2024 18:27:07 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<h2><a href="#tldr" aria-hidden="true" class="anchor" id="tldr"></a>TL;DR</h2>
<p>I've been using kanboard as a self-hosted kanban board. It's keeping me focused on <a href="https://myditialharbor.com">Digital Harbor</a> when I'd rather be doing something less productive.</p>
<h2><a href="#my-todos" aria-hidden="true" class="anchor" id="my-todos"></a>My TODOs</h2>
<p>Here's the thing about my TODOs... they're everywhere. I've tried a crazy amount of different organizational tactics for my todo items. I've tried post-it notes, a journal, <code>TODO.md</code> in specific repos, a master <code>todo</code> repo, todo CLIs, etc...</p>
<p>The problem for me was consistency... I would regularly forget what I was using for TODOs at that moment in my life... was there a todo file in this project? Do I have a todo repo cloned on this computer? Is this stuff in my journal or on post-it notes?</p>
<p>And what do I do with new ideas? Do I organize them centrally or use a repo for the idea I have?</p>
<p>It was getting out of hand to a debilitating degree... For a while I just gave up on being organized at all... Things would get done as necessary and if I got some motivation to work on something it was immediately smothered with the anxiety of how I was going to organize my work...</p>
<p>At some point it became too much... Now, I have some experience with Azure DevOps/Jira for project management and then I came across Kanboard...</p>
<h2><a href="#kanboard" aria-hidden="true" class="anchor" id="kanboard"></a>Kanboard</h2>
<p><a href="https://kanboard.org/">Kanboard</a></p>
<p>Kanboard is just a self-hosted kanban style todo app. I know there's a ton of these so the TL;DR of my lesson is I picked an app that I would just use based on simplicity of managing and hosting.</p>
<p>I have had kanboard running in my homelab for a long time, but I only barely use it intermittenly. And at that rate I didn't spend any real time organizing my tickets, so I wasn't akshuallly using it - it was just a post-it note replacement.</p>
<p>But then I had an idea for a genuine business idea, and if I was going to ever have a hope of making it a reality, I needed to stay organized. This was when I decided to give kanboard a little more effort... I knew I could always remember that I'd chosen an app as my TODO solution (given all the time I spent questioning what I was using at any given point in time). I also knew I could host kanboard so that I could get to it from wherever was necessary because my homelab is relatively easy to add another public service to.</p>
<p>So once I just decided to lean into this thing, I would take advantage of any moments of motivation and just jot down ideas for things that had to get done... Simple stuff like explore an infra management option, add one feature to a config, or migrate one website to another stack... And I would just write these things downs until I have enough time free to crack down on a task. The beautiful thing is, when I am struck with just enough time to do something, and the motivation to do something, I don't waste any time deciding what to do - past-me did present-me a favor and decided what was important already... So as long as I do myself the favor, when I'm ready to go I am never beaten by the anxiety of not knowing what I ant to do or how I'll track what I'm doing... I chose kanboard and even though it's not as fast as a terminal TUI,  it is reliable, simple, and keeps me focused on what I need to do.</p>
<h2><a href="#the-biggest-benefit" aria-hidden="true" class="anchor" id="the-biggest-benefit"></a>The biggest benefit</h2>
<p>Not only is just having one app as the solution nice because it's centrally managed and accessible from wherever I need to get it, but the TOP feature of kanboard I use is comments on tickets... I get to continue to do future-me favors, my jotting down where I'm at in a task, what's left to do, what I'm trying, etc... and future-me is in a great mood, because when I have that free few minutes, I can just read my own past thoughts and get back up to speed without wasting time trying to remember things I never would've remembered if I hadn't written them down!</p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Git repo specific SSH Key!</title><link>https://pype.dev/git-repo-specific-ssh-key.html</link><author>nicpayne</author><category>cli</category><category>homelab</category><category>tech</category><guid>https://pype.dev/git-repo-specific-ssh-key.html</guid><pubDate>Thu, 04 Jan 2024 15:42:15 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p>git config --add --local core.sshCommand 'ssh -i &lt;&lt;&lt;PATH_TO_SSH_KEY&gt;&gt;&gt;'</p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>DHCP Restart to Save Ubuntu 22.04 Server Networking</title><link>https://pype.dev/dhcp-restart-to-save-ubuntu-22-04-server-networking.html</link><author>nicpayne</author><category>homelab</category><category>linux</category><category>tech</category><guid>https://pype.dev/dhcp-restart-to-save-ubuntu-22-04-server-networking.html</guid><pubDate>Sun, 31 Dec 2023 20:26:50 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p>I moved a computer to a remote location for an off-site backup but when it was powered on it wouldn't show up on any networks. A solution that got me back in was a friend restarting the dhcp client for me:</p>
<pre><code class="language-bash">sudo dhclient -r -v &lt;interface&gt; &amp;&amp; sudo dhclient -v &lt;interface&gt;
</code></pre>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Simple Port Forwarding OPNSense</title><link>https://pype.dev/simple-port-forwarding-opnsense.html</link><author>nicpayne</author><category>homelab</category><category>homelab</category><category>tech</category><guid>https://pype.dev/simple-port-forwarding-opnsense.html</guid><pubDate>Tue, 17 Oct 2023 10:26:34 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p><a href="https://forum.opnsense.org/index.php?topic=8783.0">https://forum.opnsense.org/index.php?topic=8783.0</a></p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Simple Port Forwarding OPNSense</title><link>https://pype.dev/simple-port-forwarding-opnsense.html</link><author>nicpayne</author><category>homelab</category><category>homelab</category><category>tech</category><guid>https://pype.dev/simple-port-forwarding-opnsense.html</guid><pubDate>Tue, 17 Oct 2023 10:26:34 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p><a href="https://forum.opnsense.org/index.php?topic=8783.0">https://forum.opnsense.org/index.php?topic=8783.0</a></p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>Refresh Nextcloud Groupfolders after messing around on the filesystem</title><link>https://pype.dev/refresh-nextcloud-groupfolders-after-messing-around-on-the-filesystem.html</link><author>nicpayne</author><category>homelab</category><category>linux</category><category>tech</category><guid>https://pype.dev/refresh-nextcloud-groupfolders-after-messing-around-on-the-filesystem.html</guid><pubDate>Sat, 23 Sep 2023 12:45:06 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p>Exec in as www-data and run ./occ groupfolders:scan folder_id -v (the -v to see what it's doing)</p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item><item><title>lsof to find what&apos;s using your filesystem</title><link>https://pype.dev/lsof-to-find-what-s-using-your-filesystem.html</link><author>nicpayne</author><category>zfs</category><category>homelab</category><category>tech</category><guid>https://pype.dev/lsof-to-find-what-s-using-your-filesystem.html</guid><pubDate>Sun, 09 Apr 2023 13:32:38 GMT</pubDate><source url="https://pype.dev">tag-homelab</source><content:encoded><![CDATA[<!-- Content Injected to every content markdown header -->
<p>lsof | grep /tank/nas shows me what is using my nas at any time!</p>
<!-- Content Injected to every content markdown footer -->
]]></content:encoded></item></channel></rss>